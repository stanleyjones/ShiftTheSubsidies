<p id="table_caption">Institutional subsidies for <span class="legend_start_year"><%= @start_date.year %></span><span class="legend_end_year">-<%= @end_date.year %></span></p>

<table id="table">
	<thead><tr><th>Total</th><th>Institution</th><th>Clean</th><th>%</th><th>Fossil</th><th>%</th><th>Access</th><th>%</th></tr></thead>
	<tbody></tbody>
	<tfoot><tr><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></tfoot>
</table>

<script>
function draw_table(data) {
	var h = $('#graph').height() - 162; /* thead (86px) + tfoot (78px) */
	var oTable = $('#table').dataTable({
		"bDestroy": true,
		"bPaginate": false,
		"aaData": data.institutions,
		"sScrollY": h+'px',
		'aoColumns': [
			{
				'sWidth': '10%', 'sType': 'currency', 'asSorting': ['desc','asc'],
				'mData': 'awarded',
				'mRender': function( data ) { return '$'+to_currency( data.all.total ); }
			},
			{
				'sWidth': '45%',
				'mData': 'name',
				'mRender': function( data, type, row ) { return '<a href="'+row.url+'"/>'+data+'</a>'; }
			},
			{
				'sWidth': '10%', 'sType': 'currency', 'asSorting': ['desc','asc'],
				'mData': 'awarded.all.clean',
				'mRender': function( data ) { return '$'+to_currency( data ); }
			},
			{
				'sWidth': '5%', 'sType': 'percent',
				'mData': 'awarded.all',
				'mRender': function( data ) { return Math.floor((data.clean / Math.max(data.total,1)) * 100)+'%'; }
			},
			{
				'sWidth': '10%', 'sType': 'currency', 'asSorting': ['desc','asc'],
				'mData': 'awarded.all.fossil',
				'mRender': function( data ) { return '$'+to_currency( data ); }
			},
			{
				'sWidth':'5%', 'sType': 'percent',
				'mData': 'awarded.all',
				'mRender': function( data ) { return Math.floor((data.fossil / Math.max(data.total,1)) * 100)+"%"; }
			},
			{
				'sWidth': '10%', 'sType': 'currency', 'asSorting': ['desc','asc'],
				'mData': 'awarded.all.access',
				'mRender': function( data ) { return '$'+to_currency( data ); }
			},
			{
				'sWidth': '5%', 'sType': 'percent',
				'mData': 'awarded.all',
				'mRender': function( data ) { return Math.floor((data.access / Math.max(data.total,1)) * 100)+'%'; }
			}
		],
		'fnRowCallback': function( tr, row, index ) {
			$('td:eq(0)', tr).html( '$'+to_currency( row.awarded[r].total ));
			$('td:eq(2)', tr).html( '$'+to_currency( row.awarded[r].clean ));
			$('td:eq(3)', tr).html( Math.floor((row.awarded[r].clean / Math.max(row.awarded[r].total,1)) * 100)+'%' );
			$('td:eq(4)', tr).html( '$'+to_currency( row.awarded[r].fossil ));
			$('td:eq(5)', tr).html( Math.floor((row.awarded[r].fossil / Math.max(row.awarded[r].total,1)) * 100)+'%' );
			$('td:eq(6)', tr).html( '$'+to_currency( row.awarded[r].access ));
			$('td:eq(7)', tr).html( Math.floor((row.awarded[r].access / Math.max(row.awarded[r].total,1)) * 100)+'%' );
		},
		'fnFooterCallback': function ( tr, row, start, end, index ) {
			var total = {'total': 0, 'clean': 0, 'fossil': 0, 'access': 0};
			for (var i=start; i<end; i++) {
				total.total  += row[index[i]].awarded[r].total * 1.0;
				total.clean  += row[index[i]].awarded[r].clean * 1.0;
				total.fossil += row[index[i]].awarded[r].fossil * 1.0;
				total.access += row[index[i]].awarded[r].access * 1.0;
			}
			$('th:eq(0)', tr).html( '$'+to_currency( total.total ));
			$('th:eq(2)', tr).html( '$'+to_currency( total.clean ));
			$('th:eq(4)', tr).html( '$'+to_currency( total.fossil ));
			$('th:eq(6)', tr).html( '$'+to_currency( total.access ));
		}
	});
	$.fn.dataTableExt.afnFiltering.push(function( oSettings, aData, iDataIndex ) {
		if ( aData[0] != '$0' ) { return true; } else { return false; }
	});
	$('button.table').click(function() { oTable.fnAdjustColumnSizing(); });
}
</script>