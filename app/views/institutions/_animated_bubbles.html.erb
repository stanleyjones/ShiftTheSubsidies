<div id="graph">
	<div id="loader">Loading...</div>
	<p id="caption"><b>Above:</b> Lending institutions scaled by subsidies awarded in <%= @start_date.year %><% if @end_date.year > @start_date.year %>&ndash;<%= @end_date.year %><% end %> and colored by <span class="clean">clean energy</span> vs <span class="fossil">fossil fuel</span> ratio of their project portfolio.</p>
</div>

<script>
	var w = $('#wrapper').width(), h = $('#wrapper').height() - 140;
	var graph = d3.select("#graph").append("svg:svg").attr("width", w).attr("height", h);
	
	// Functions
	var scale = d3.scale.linear().domain([1,1E12]).range([1,500]);
	function bubblize(data) { var bubbles = []; for (var b in data) { var bubble = data[b]; bubbles.push(bubble); } return {children: bubbles};	}

	// Bubble Chart
	var bubble = d3.layout.pack()
		.sort(null)
		.value(function(d) { return scale(d.live_awarded_raw); })
		.size([w,h]);

	d3.json("<%= request.url %>.json?s=<%= @start_date.year %>&e=<%= @end_date.year %>", function(json) {
		var node = graph.selectAll("g.node")
			.data(bubble(bubblize(json.institutions))
				.filter(function(d) { return d.data.live_awarded_raw > 0; })
				.filter(function(d) { return !d.children; }))
		.enter().append("svg:g")
			.attr("class","node")
			.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
			
		node.append("svg:text")
			.attr("class", "label")
			.attr("style", function(d) { return "font-size:"+(d.r / 3) + "px"; })
			.text(function(d) { return d.data.abbreviation; });

		node.append("svg:circle")
			.attr("class", function(d) { return d.data.category; })
			.attr("r", function(d) { return d.r; })
			.style("fill", function(d) { return d3.interpolateRgb("#963", "#6f6")(d.data.percent_clean/100); })
			.on("click", function(d) { location.href = "/institutions/" + d.data.institution_id; });

		d3.select("#loader").remove();
	});

	function redraw() {
		
		var node = graph.selectAll("g.node")
			.data(bubble(bubblize(json.institutions))
				.filter(function(d) { return d.data.live_awarded_raw > 0; })
				.filter(function(d) { return !d.children; }));
	
		node.enter().append("svg:g")
			.attr("class", "node")
			.attr("transform", function(d) { return "translate("+d.x+","+d.y+")"; });
		
		
	
	}
	
</script>