<div id="graph"><div id="loader">Loading...</div></div>

<script>
	var w = 970, h = 640;
	var graph = d3.select("#graph").append("svg:svg").attr("width", w).attr("height", h);
	
	// Functions
	var fill = d3.scale.ordinal().domain(['entity','project','institution']).range(["#f90","#666","#f00"]);;
	var scale_r = d3.scale.ordinal().domain(['project','institution']).range([25,40]);
	var scale_s = d3.scale.linear().domain([1,1e10]).range([1,50]);
	
	// Force-Directed	
	d3.json("<%= request.url %>.json", function(json) {
		
		var force = d3.layout.force()
			.nodes(json.nodes)
			.links(json.links)
			.distance(150)
			.charge(-500)
			.gravity(0.05)
			.size([w,h])
			.start();
		
		var link = graph.selectAll("line.link")
		  .data(json.links)
			.enter().append("svg:line")
			  .attr("class", "link")
			  .style("stroke-width", function(d) { return scale_s( Math.floor(d.value) ); })
			  .attr("x1", function(d) { return d.source.x; })
			  .attr("y1", function(d) { return d.source.y; })
			  .attr("x2", function(d) { return d.target.x; })
			  .attr("y2", function(d) { return d.target.y; });
		  
		var node = graph.selectAll("circle.node")
			.data(json.nodes)
			.enter().append("svg:circle")
				.attr("class", function(d) { return "node " + d.group; })
				.attr("cx", function(d) { return d.x; })
				.attr("cy", function(d) { return d.y; })
				.attr("r", function(d) { return scale_r( d.group ); })
				.style("fill", function(d) { return d3.interpolateRgb("#963", "#6f6")(d.ratio); });

		var label = graph.selectAll("text.label")
			.data(json.nodes);
		label.enter().append("svg:text")
			.attr("class",function(d) { return "label " + d.group; })
			.attr("x", function(d) { return d.x; })
			.attr("y", function(d) { return d.y; });
		
		var label = graph.selectAll("text.label")
			.text(function(d) { return d.name; })
			.on("click", function(d) { location.href = d.url; })
			.attr("text-anchor","middle");
		
		var link_label = graph.selectAll("text.link_label")
			.data(json.links);
		link_label.enter().append("svg:text")
			.attr("class","link_label")
			.attr("x", function(d) { return (d.source.x + d.target.x) / 2; })
			.attr("y", function(d) { return (d.source.y + d.target.y) / 2; });
		
		var link_label = graph.selectAll("text.link_label")
			.text(function(d) { return d.name; });
	
		node.append("svg:title")
			.text(function(d) { return d.name; });	
		
		force.on("tick", function() {
			link.attr("x1", function(d) { return d.source.x; })
				.attr("y1", function(d) { return d.source.y; })
				.attr("x2", function(d) { return d.target.x; })
				.attr("y2", function(d) { return d.target.y; });
			node.attr("cx", function(d) { return d.x; })
				.attr("cy", function(d) { return d.y; });
			label.attr("x", function(d) { return d.x; })
				.attr("y", function(d) { return d.y; });
			link_label.attr("x", function(d) { return (d.source.x + d.target.x) / 2; })
				.attr("y", function(d) { return (d.source.y + d.target.y) / 2; });
		});
		
		d3.select("#loader").remove();
	});
	
</script>

<style>
	#graph circle:hover {cursor:default; stroke:#fff;}
	#graph circle.entity {opacity:1; fill:#f90;}
	#graph circle.project {opacity:1; stroke:none; background-image:url(/stylesheets/images/noise.png);}
	#graph circle.institution {opacity:1; fill:#666;}
	
	#graph text.label {cursor:pointer;}
	#graph text.label.project {opacity:0; font-size:12px; -webkit-transition:opacity 0.5s;}
	#graph text.label:hover {fill:#f96; opacity:1;}
	#graph text.entity {fill:#111; display:none;}
	#graph text.project {fill:#666;}
	#graph text.institution {fill:#fff;}

	#graph line.link {stroke-linecap:round;}
</style>