<div id="graph">
	<div id="info"><h1><%= @entity.name %></h1><p><%= @entity.kind %></p></div>
	<div id="loader">Loading...</div>
	<p id="caption"><span class="clean">Clean energy</span> and <span class="fossil">fossil fuel</span> projects of <%= @entity.name %> and their funding institutions.</p>
</div>

<script>
	var w = $('#wrapper').width(), h = $('#wrapper').height() - 140;
	var graph = d3.select("#graph").append("svg:svg").attr("width", w).attr("height", h);
	
	// Functions
	var fill = d3.scale.ordinal().domain(['entity','project','institution']).range(["#f90","#666","#f00"]);;
	var scale_r = d3.scale.ordinal().domain(['project','institution']).range([24,64]);
	var scale_s = d3.scale.linear().domain([1,1e10]).range([1,50]);
	

function drawGraph(data) {
		
		var force = d3.layout.force()
			.nodes(data.nodes)
			.links(data.links)
			.distance(150)
			.charge(-500)
			.gravity(0.075)
			.size([w,h])
			.start();
		
		var link = graph.selectAll("line.link")
		  .data(data.links)
			.enter().append("svg:line")
			  .attr("class", "link")
			  .style("stroke-width", function(d) { return scale_s( Math.floor(d.value) ); })
			  .attr("x1", function(d) { return d.source.x; })
			  .attr("y1", function(d) { return d.source.y; })
			  .attr("x2", function(d) { return d.target.x; })
			  .attr("y2", function(d) { return d.target.y; });

		var icon = graph.selectAll("image.icon")
			.data(data.nodes.filter(function(d) { return d.group == 'project'; }))
			.enter().append("svg:image")
			.attr("xlink:href", function(d) { if (d.group == 'project') {return d.icon;}})
			.attr("x", function(d) { return "-" + scale_r('project') / 2 + "px"; })
			.attr("y", function(d) { return "-" + scale_r('project') / 2 + "px"; })
			.attr("width", function(d) { return scale_r('project') + "px"; })
			.attr("height", function(d) { return scale_r('project') + "px"; });
		  
		var label = graph.selectAll("text.label")
			.data(data.nodes.filter(function(d) { return d.group == 'institution'; }));
		label.enter().append("svg:text")
			.attr("class",function(d) { return "label " + d.group; })
			.attr("x", function(d) { return d.x; })
			.attr("y", function(d) { return d.y; });
		
		var label = graph.selectAll("text.label")
			.text(function(d) { return d.name; })
			.on("click", function(d) { location.href = d.url; })
			.attr("text-anchor","middle");
		
		var node = graph.selectAll("circle.node")
			.data(data.nodes)
			.enter().append("svg:circle")
				.attr("class", function(d) { return "node " + d.group + " " + d.category; })
				.attr("cx", function(d) { return d.x; })
				.attr("cy", function(d) { return d.y; })
				.attr("r", function(d) { return scale_r( d.group ); })
				.on("click", function(d) { location.href = d.url; });

		var link_label = graph.selectAll("text.link_label")
			.data(data.links);
		link_label.enter().append("svg:text")
			.attr("class","link_label")
			.attr("style", "stroke-line-endcap:round;")
			.attr("x", function(d) { return (d.source.x + d.target.x) / 2; })
			.attr("y", function(d) { return (d.source.y + d.target.y) / 2; });
		
		var link_label = graph.selectAll("text.link_label")
			.text(function(d) { return d.label; });
	
		force.on("tick", function() {
			link.attr("x1", function(d) { return d.source.x; })
				.attr("y1", function(d) { return d.source.y; })
				.attr("x2", function(d) { return d.target.x; })
				.attr("y2", function(d) { return d.target.y; });
			node.attr("cx", function(d) { return d.x; })
				.attr("cy", function(d) { return d.y; });
			label.attr("x", function(d) { return d.x; })
				.attr("y", function(d) { return d.y; });
			link_label.attr("x", function(d) { return (d.source.x + d.target.x) / 2; })
				.attr("y", function(d) { return (d.source.y + d.target.y) / 2; });
			icon.attr("x", function(d) { return d.x - 12; })
				.attr("y", function(d) { return d.y - 12; });
		});

};
</script>