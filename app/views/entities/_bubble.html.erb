<div id="graph"><div id="loader">Loading...</div></div>

<script>
	var w = 970, h = 640;
	var graph = d3.select("#graph").append("svg:svg").attr("width", w).attr("height", h);
	
	// Functions
	var scale = d3.scale.linear();
	
	// Bubble Chart	
	var bubble = d3.layout.pack()
		.sort(null)
		.value(function(d) { return (d.live_received_raw > 0) ? d.live_received_raw / 1000 : 1; })
		.size([w,h]);

	d3.json("<%= request.url %>.json", function(json) {
		var node = graph.selectAll("g.node")
			.data(bubble(bubblize(json.entities))
				.filter(function(d) { return !d.children; }))
		.enter().append("svg:g")
			.attr("class","node")
			.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

		node.append("svg:text")
			.attr("class", "label")
			.attr("style", function(d) { return "font-size:"+(d.r / 2) + "px"; })
			.text(function(d) { return d.data.amount_human; });
			
		node.append("svg:circle")
			.attr("r", function(d) { return d.r; })
			.style("fill", function(d) { return d3.interpolateRgb("#963", "#6f6")(d.data.percent_clean/100); })
			.on("click", function(d) { location.href = "/entities/"+d.data.entity_id; });
	
		d3.select("#loader").remove();		
	});
	
	function bubblize( data ) {
		var bubbles = [];
		
		for (var b in data) {
			var bubble = data[b];
			bubbles.push(bubble);
		}
		//console.log(bubbles);
		return {children: bubbles};
	}
	
</script>